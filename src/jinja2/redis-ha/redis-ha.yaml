



---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: redis-ha-sentinel-svc
    role: service
    app: redis-ha
    heritage: "redis-ha"
    release: "test"
    chart: 
    0.2.1
    -('redis-ha',)
  name: redis-sentinel
spec:
  ports:
    - port: 26379
      targetPort: 26379
  selector:
    redis-sentinel: "true"
    chart: "redis-ha-0.2.1"
    release: "test"
    heritage: "redis-ha"


---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: redis-ha
    role: service
    app: redis-ha
    heritage: "redis-ha"
    release: "test"
    chart: 
    0.2.1
    -('redis-ha',)
  name: test-redis-ha
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    redis-node: "true"
    chart: "redis-ha-0.2.1"
    release: "test"
    heritage: "redis-ha"


---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    name: redis-ha-master
    redis-sentinel: "true"
    redis-node: "true"
    role: master
    app: redis-ha
    heritage: "redis-ha"
    release: "test"
    chart: 
    0.2.1
    -('redis-ha',)
  name: test-redis-ha-master
spec:
  serviceName: "redis"
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        redis-sentinel: "true"
        redis-node: "true"
        role: master
        app: redis-ha
        heritage: "redis-ha"
        release: "test"
        chart: 
        0.2.1
        -('redis-ha',)
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: master
          image: gcr.io/google_containers/redis:v1
          resources:
            limits: {memory: 700Mi}
            requests: {cpu: 100m, memory: 200Mi}
          env:
            - name: MASTER
              value: "true"
          ports:
            - containerPort: 6379

          volumeMounts:
            - mountPath: /redis-master-data
              name: data
        - name: sentinel
          image: gcr.io/google_containers/redis:v1
          resources:
            limits: {memory: 200Mi}
            requests: {cpu: 100m, memory: 200Mi}
          env:
            - name: SENTINEL
              value: "true"
          ports:
            - containerPort: 26379
      volumes:
      - name: data
        emptyDir: {}

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test-redis-ha
  labels:
    redis-node: "true"
    app: redis-ha
    heritage: "redis-ha"
    release: "test"
    chart: 
    0.2.1
    -('redis-ha',)
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: redis
        role: replica
        app: redis-ha
        heritage: "redis-ha"
        release: "test"
        chart: 
        0.2.1
        -('redis-ha',)
    spec:
      containers:
      - name: redis
        image: "gcr.io/google_containers/redis:v1"
        resources:
          limits: {memory: 200Mi}
          requests: {cpu: 100m, memory: 200Mi}
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
      volumes:
      - name: data
        emptyDir: {}

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test-redis-ha-sentinel
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: redis-sentinel
        redis-sentinel: "true"
        role: sentinel
        app: redis-ha
        heritage: "redis-ha"
        release: "test"
        chart: 
        0.2.1
        -('redis-ha',)
    spec:
      containers:
      - name: sentinel
        image: gcr.io/google_containers/redis:v1
        resources:
          limits: {memory: 700Mi}
          requests: {cpu: 100m, memory: 200Mi}
        env:
          - name: SENTINEL
            value: "true"
        ports:
          - containerPort: 26379