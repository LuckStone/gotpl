apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.centrifugo__fullname() }}-config
  labels:
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    app: {{ self.centrifugo__name() }}
data:
  config.json: |-
{{ toJson(Values.config) | indent(4) }}#---{%- if Values.ingress.enabled -%}
{%- set serviceName =  self.centrifugo__fullname() -%}
{%- set servicePort = Values.service.port -%}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ self.centrifugo__fullname() }}
  labels:
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    app: {{ self.centrifugo__name() }}
  annotations:
    {%- for key, value in Values.ingress.annotations.iteritems() %}
      {{ key }}: {{ value | quote() }}
    {%- endfor %}
spec:
  rules:
    {%- for host in Values.ingress.hosts %}
    - host: {{ host }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ serviceName }}
              servicePort: {{ servicePort }}
    {%- endfor -%}
  {%- if Values.ingress.tls %}
  tls:
{{ toYaml(Values.ingress.tls) | indent(4) }}
  {%- endif -%}
{%- endif -%}
#---apiVersion: v1
kind: Secret
metadata:
  name: {{ self.centrifugo__fullname() }}
  labels:
    app: {{ self.centrifugo__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    release: {{ Release.Name }}
    heritage: {{ Release.Service }}
type: Opaque
data:
  {%- if Values.admin.password %}
  admin-password: {{ Values.admin.password | b64enc() | quote() }}
  {%- else %}
  admin-password: {{ randAlphaNum(10) | b64enc() | quote() }}
  {%- endif %}
  {%- if Values.admin.secret %}
  admin-secret: {{ Values.admin.secret | b64enc() | quote() }}
  {%- else %}
  admin-secret: {{ randAlphaNum(10) | b64enc() | quote() }}
  {%- endif %}
  {%- if Values.secret %}
  secret: {{ Values.secret | b64enc() | quote() }}
  {%- else %}
  secret: {{ randAlphaNum(10) | b64enc() | quote() }}
  {%- endif %}#---apiVersion: v1
kind: Service
metadata:
{%- if Values.service.annotations %}
  annotations:
{{ toYaml(Values.service.annotations) | indent(4) }}
{%- endif %}
  labels:
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    app: {{ self.centrifugo__name() }}
  name: {{ self.centrifugo__fullname() }}
spec:
  type: "{{ Values.service.type }}"
  clusterIP: "{{ Values.service.clusterIP }}"
{%- if Values.service.externalIPs %}
  externalIPs:
{{ toYaml(Values.service.externalIPs) | indent(4) }}
{%- endif %}
{%- if Values.service.loadBalancerIP %}
  loadBalancerIP: "{{ Values.service.loadBalancerIP }}"
{%- endif %}
{%- if Values.service.loadBalancerSourceRanges %}
  loadBalancerSourceRanges:
{{ toYaml(Values.service.loadBalancerSourceRanges) | indent(4) }}
{%- endif %}
  ports:
    - name: http
      port: {{ Values.service.port }}
      protocol: TCP
      targetPort: http
      {%- if ((Values.service.type=="NodePort") and ( not  ( empty  Values.service.nodePort))) %}
      nodePort: {{ Values.service.nodePort }}
      {%- endif %}
  selector:
    app: {{ self.centrifugo__name() }}
    release: {{ Release.Name }}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.centrifugo__fullname() }}
  labels:
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    app: {{ self.centrifugo__name() }}
spec:
  replicas: {{ Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: ""
      labels:
        app: {{ self.centrifugo__name() }}
        release: {{ Release.Name }}
    spec:
      containers:
      - name: {{ Chart.Name }}
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        command:
        - centrifugo
        args:
        {%- for arg in Values.args %}
        - {{ arg }}
        {%- endfor %}
        env:
        - name: CENTRIFUGO_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.centrifugo__fullname() }}
              key: admin-password
        - name: CENTRIFUGO_ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ self.centrifugo__fullname() }}
              key: admin-secret
        - name: CENTRIFUGO_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ self.centrifugo__fullname() }}
              key: secret
        volumeMounts:
        - name: "{{ self.centrifugo__fullname() }}-config"
          mountPath: "/centrifugo"
          readOnly: true
        ports:
        - name: http
          containerPort: {{ Values.service.port }}
        livenessProbe:
          httpGet:
            path: /connection
            port: {{ Values.service.port }}
        readinessProbe:
          httpGet:
            path: /connection
            port: {{ Values.service.port }}
        resources:
{{ toYaml(Values.resources) | indent(10) }}
      volumes:
      - name: {{ self.centrifugo__fullname() }}-config
        configMap:
          name: {{ self.centrifugo__fullname() }}-config