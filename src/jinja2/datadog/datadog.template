apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.datadog__autoconf__fullname() }}
  labels:
    app: {{ self.datadog__autoconf__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
data:
{%- if Values.datadog.autoconf %}
{{ toYaml(Values.datadog.autoconf) | indent(2) }}
{%- endif -%}
#---apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.datadog__checksd__fullname() }}
  labels:
    app: {{ self.datadog__checksd__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
data:
{%- if Values.datadog.checksd %}
{{ toYaml(Values.datadog.checksd) | indent(2) }}
{%- endif -%}
#---apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.datadog__confd__fullname() }}
  labels:
    app: {{ self.datadog__confd__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
data:
{%- if Values.datadog.confd %}
{{ toYaml(Values.datadog.confd) | indent(2) }}
{%- endif -%}
#---{%- if Values.daemonset.enabled %}
{%- if Values.datadog.apiKey %}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ self.datadog__fullname() }}
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ self.datadog__fullname() }}
      name: {{ self.datadog__fullname() }}
      {%- if Values.daemonset.podAnnotations %}
      annotations:
{{ toYaml(Values.daemonset.podAnnotations) | indent(8) }}
      {%- endif %}
    spec:
      {%- if Values.daemonset.useHostNetwork %}
      hostNetwork: {{ Values.daemonset.useHostNetwork }}
      {%- endif %}
      containers:
      - name: {{ Chart.Name }}
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        resources:
{{ toYaml(Values.resources) | indent(12) }}
        ports:
        - containerPort: 8125
          {%- if Values.daemonset.useHostPort %}
          hostPort: 8125
          {%- endif %}
          name: dogstatsdport
          protocol: UDP
        {%- if Values.datadog.apmEnabled %}
        - containerPort: 8126
          {%- if Values.daemonset.useHostPort %}
          hostPort: 8126
          {%- endif %}
          name: traceport
          protocol: TCP
        - containerPort: 7777
          name: legacytraceport
          protocol: TCP
        {%- endif %}
        env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ self.datadog__fullname() }}
                key: api-key
          - name: LOG_LEVEL
            value: {{ Values.datadog.logLevel | quote() }}
          - name: SD_BACKEND
            value: docker
          - name: NON_LOCAL_TRAFFIC
            value: {{ Values.datadog.nonLocalTraffic | default("", true) | quote() }}
          - name: TAGS
            value: {{ Values.datadog.tags | default("", true) | quote() }}
          - name: DD_APM_ENABLED
            value: {{ Values.datadog.apmEnabled | default("", true) | quote() }}
          - name: KUBERNETES
            value: "yes"
{%- if Values.datadog.env %}
{{ toYaml(Values.datadog.env) | indent(10) }}
{%- endif %}
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
            readOnly: true
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: confd
            mountPath: /conf.d
            readOnly: true
          - name: autoconf
            mountPath: /etc/dd-agent/conf.d/auto_conf
            readOnly: true
          - name: checksd
            mountPath: /checks.d
            readOnly: true
{%- if Values.datadog.volumeMounts %}
{{ toYaml(Values.datadog.volumeMounts) | indent(10) }}
{%- endif %}
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        - name: confd
          configMap:
            name: {{ self.datadog__confd__fullname() }}
        - name: checksd
          configMap:
            name: {{ self.datadog__checksd__fullname() }}
        - name: autoconf
          configMap:
            name: {{ self.datadog__autoconf__fullname() }}
{%- if Values.datadog.volumes %}
{{ toYaml(Values.datadog.volumes) | indent(8) }}
{%- endif %}
      {%- if Values.daemonset.tolerations %}
      tolerations:
{{ toYaml(Values.daemonset.tolerations) | indent(8) }}
      {%- endif %}
  updateStrategy:
    type: {{ Values.daemonset.updateStrategy | default("OnDelete", true) | quote() }}
{%- endif %}
{%- endif %}
#---apiVersion: v1
kind: Secret
metadata:
  name: {{ self.datadog__fullname() }}
  labels:
    app: {{ self.datadog__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
type: Opaque
data:
  api-key: {{ Values.datadog.apiKey | default("MISSING", true) | b64enc() | quote() }}
#---{%- if Values.deployment.enabled %}
apiVersion: v1
kind: Service
metadata:
  name: {{ self.datadog__fullname() }}
  labels:
    app: {{ self.datadog__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
spec:
  type: {{ Values.serviceType }}
  selector:
    app: {{ self.datadog__fullname() }}
  ports:
  - port: 8125
    name: dogstatsdport
    protocol: UDP
  {%- if Values.datadog.apmEnabled %}
  - port: 8126
    name: traceport
    protocol: TCP
  {%- endif %}
{%- endif %}
#---{%- if Values.deployment.enabled %}
{%- if Values.datadog.apiKey %}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.datadog__fullname() }}
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  replicas: {{ Values.deployment.replicas }}
  template:
    metadata:
      labels:
        app: {{ self.datadog__fullname() }}
      name: {{ self.datadog__fullname() }}
    spec:
      containers:
      - name: {{ Chart.Name }}
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        resources:
{{ toYaml(Values.resources) | indent(12) }}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        {%- if Values.datadog.apmEnabled %}
        - containerPort: 8126
          name: traceport
          protocol: TCP
        {%- endif %}
        env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ self.datadog__fullname() }}
                key: api-key
          - name: LOG_LEVEL
            value: {{ Values.datadog.logLevel | quote() }}
          - name: SD_BACKEND
            value: docker
          - name: NON_LOCAL_TRAFFIC
            value: {{ Values.datadog.nonLocalTraffic | default("", true) | quote() }}
          - name: TAGS
            value: {{ Values.datadog.tags | default("", true) | quote() }}
          - name: DD_APM_ENABLED
            value: {{ Values.datadog.apmEnabled | default("", true) | quote() }}
          - name: KUBERNETES
            value: "yes"
          {%- if Values.datadog.collectEvents %}
          - name: KUBERNETES_COLLECT_EVENTS
            value: "yes"
          {%- endif %}
{%- if Values.datadog.env %}
{{ toYaml(Values.datadog.env) | indent(10) }}
{%- endif %}
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: confd
            mountPath: /conf.d
            readOnly: true
          - name: autoconf
            mountPath: /etc/dd-agent/conf.d/auto_conf
            readOnly: true
          - name: checksd
            mountPath: /checks.d
            readOnly: true
{%- if Values.datadog.volumeMounts %}
{{ toYaml(Values.datadog.volumeMounts) | indent(10) }}
{%- endif %}
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        - name: confd
          configMap:
            name: {{ self.datadog__confd__fullname() }}
        - name: checksd
          configMap:
            name: {{ self.datadog__checksd__fullname() }}
        - name: autoconf
          configMap:
            name: {{ self.datadog__autoconf__fullname() }}
{%- if Values.datadog.volumes %}
{{ toYaml(Values.datadog.volumes) | indent(8) }}
{%- endif %}
{%- endif %}
{%- endif %}
