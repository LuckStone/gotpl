apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.mariadb__fullname() }}
  labels:
    app: {{ self.mariadb__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
data:
  my.cnf: |-
{%- if Values.config %}
{{ Values.config | indent(4) }}
{%- endif -%}
#---apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.mariadb__fullname() }}-tests
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h {{ self.mariadb__fullname() }} {%- if Values.usePassword %} -p$MARIADB_ROOT_PASSWORD{%- endif %} -e 'show databases;'
    }
#---{%- if Values.persistence.enabled and ( not  Values.persistence.existingClaim) %}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ self.mariadb__fullname() }}
  labels:
    app: {{ self.mariadb__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  accessModes:
    - {{ Values.persistence.accessMode | quote() }}
  resources:
    requests:
      storage: {{ Values.persistence.size | quote() }}
{%- if Values.persistence.storageClass %}
{%- if ("-"==Values.persistence.storageClass) %}
  storageClassName: ""
{%- else %}
  storageClassName: "{{ Values.persistence.storageClass }}"
{%- endif %}
{%- endif %}
{%- endif %}
#---{%- if Values.usePassword -%}
apiVersion: v1
kind: Secret
metadata:
  name: {{ self.mariadb__fullname() }}
  labels:
    app: {{ self.mariadb__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
type: Opaque
data:
  {%- if Values.mariadbRootPassword %}
  mariadb-root-password: {{ Values.mariadbRootPassword | b64enc() | quote() }}
  {%- else %}
  mariadb-root-password: {{ randAlphaNum(10) | b64enc() | quote() }}
  {%- endif %}
  {%- if Values.mariadbPassword %}
  mariadb-password: {{ Values.mariadbPassword | b64enc() | quote() }}
  {%- else %}
  mariadb-password: {{ randAlphaNum(10) | b64enc() | quote() }}
  {%- endif %}
{%- endif -%}
#---apiVersion: v1
kind: Service
metadata:
  name: {{ self.mariadb__fullname() }}
  labels:
    app: {{ self.mariadb__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
{%- if Values.metrics.enabled %}
  annotations:
{{ toYaml(Values.metrics.annotations) | indent(4) }}
{%- endif %}
spec:
  type: {{ Values.serviceType }}
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
{%- if Values.metrics.enabled %}
  - name: metrics
    port: 9104
    targetPort: metrics
{%- endif %}
  selector:
    app: {{ self.mariadb__fullname() }}
#---apiVersion: v1
kind: Pod
metadata:
  name: "{{ self.mariadb__fullname() }}-test-{{ randAlphaNum(5) | lower() | trim() }}"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
        - "bash"
        - "-c"
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: mariadb-test
      image: {{ Values.image }}
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      {%- if Values.usePassword %}
      env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.mariadb__fullname() }}
              key: mariadb-root-password
      {%- endif %}
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: {{ self.mariadb__fullname() }}-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.mariadb__fullname() }}
  labels:
    app: {{ self.mariadb__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ self.mariadb__fullname() }}
    spec:
      containers:
      - name: mariadb
        image: "{{ Values.image }}"
        imagePullPolicy: {{ Values.imagePullPolicy | quote() }}
        env:
        {%- if Values.usePassword %}
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.mariadb__fullname() }}
              key: mariadb-root-password
        {%- if Values.mariadbUser %}
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.mariadb__fullname() }}
              key: mariadb-password
        {%- endif %}
        {%- else %}
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        {%- endif %}
        - name: MARIADB_USER
          value: {{ Values.mariadbUser | default("", true) | quote() }}
        - name: MARIADB_DATABASE
          value: {{ Values.mariadbDatabase | default("", true) | quote() }}
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml(Values.resources) | indent(10) }}
        volumeMounts:
        - name: config
          mountPath: /bitnami/mariadb/conf/my_custom.cnf
          subPath: my.cnf
        - name: data
          mountPath: /bitnami/mariadb
{%- if Values.metrics.enabled %}
      - name: metrics
        image: "{{ Values.metrics.image }}:{{ Values.metrics.imageTag }}"
        imagePullPolicy: {{ Values.metrics.imagePullPolicy | quote() }}
        env:
        {%- if Values.usePassword %}
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.mariadb__fullname() }}
              key: mariadb-root-password
        {%- endif %}
        command: [ 'sh', '-c', 'DATA_SOURCE_NAME="root:$MARIADB_ROOT_PASSWORD@(localhost:3306)/" /bin/mysqld_exporter' ]
        ports:
        - name: metrics
          containerPort: 9104
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml(Values.metrics.resources) | indent(10) }}
{%- endif %}
      volumes:
      - name: config
        configMap:
          name: {{ self.mariadb__fullname() }}
      - name: data
      {%- if Values.persistence.enabled %}
        persistentVolumeClaim:
          claimName: {{ Values.persistence.existingClaim | default  (self.mariadb__fullname()) }}
      {%- else %}
        emptyDir: {}
      {%- endif -%}
