{%- if (Values.coscale.appId and Values.coscale.accessToken) and Values.coscale.templateId -%}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ self.coscale__name() }}
  labels:
    app: {{ self.coscale__name() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  template:
    metadata:
      name: {{ self.coscale__name() }}
      labels:
        app: {{ self.coscale__name() }}
    spec:
      hostNetwork: true    
      containers:
      - name: {{ Chart.Name }}
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        resources:
{{ toYaml(Values.resources) | indent(12) }}
        env:
        - name: APP_ID
          valueFrom:
            secretKeyRef:
              name: {{ self.coscale__name() }}
              key: app_id
        - name: ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ self.coscale__name() }}
              key: access_token
        - name: TEMPLATE_ID
          value: {{ Values.coscale.templateId | quote() }}
        volumeMounts:
        - name: dockersocket
          mountPath: /var/run/docker.sock
        - name: hostroot
          mountPath: /host
          readOnly: true
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: dockersocket
      - hostPath:
          path: /
        name: hostroot
{%- endif %}
#---apiVersion: v1
kind: Secret
metadata:
  name: {{ self.coscale__name() }}
  labels:
    app: {{ self.coscale__name() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
type: Opaque
data:
 app_id : {{ Values.coscale.appId | default("MISSING", true) | b64enc() | quote() }}
 access_token : {{ Values.coscale.accessToken | default("MISSING", true) | b64enc() | quote() }}