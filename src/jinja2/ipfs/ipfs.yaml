
apiVersion: v1
kind: Service
metadata:
  name: test-ipfs
  labels:
    app: ipfs
    chart: ipfs-0.2.0
    heritage: ipfs
    release: test
spec:
  type: ClusterIP
  ports:
  - port: 5001
    targetPort: 5001
    protocol: TCP
    name: api
  - port: 8080
    targetPort: 8080
    name: gateway
  selector:
    app: ipfs
    release: test


---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: test-ipfs
  labels:
    app: ipfs
    chart: ipfs-0.2.0
    heritage: ipfs
    release: test
spec:
  replicas: 1
  serviceName: test-ipfs
  template:
    metadata:
      labels:
        app: ipfs
        chart: ipfs-0.2.0
        heritage: ipfs
        release: test
    spec:
      securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: ipfs
        image: ipfs/go-ipfs:v0.4.9
        ports:
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        volumeMounts:
          - name: ipfs-storage
            mountPath: /data/ipfs
        resources:
          {}
  volumeClaimTemplates:
    - metadata:
        name: ipfs-storage
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"