{%- if Values.alertmanager.enabled -%}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ self.prometheus__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    component: "{{ Values.alertmanager.name }}"
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
  name: {{ self.prometheus__alertmanager__fullname() }}
spec:
  replicas: {{ Values.alertmanager.replicaCount }}
  {%- if Values.server.strategy %}
  strategy:
{{ toYaml(Values.server.strategy) | indent(4) }}
  {%- endif %}
  template:
    metadata:
    {%- if Values.alertmanager.podAnnotations %}
      annotations:
{{ toYaml(Values.alertmanager.podAnnotations) | indent(8) }}
    {%- endif %}
      labels:
        app: {{ self.prometheus__name() }}
        component: "{{ Values.alertmanager.name }}"
        release: {{ Release.Name }}
    spec:
      serviceAccountName: {%- if Values.rbac.create %}{{ self.prometheus__alertmanager__fullname() }}{%- else %}"{{ Values.alertmanager.serviceAccountName }}"{%- endif %}
      containers:
        - name: {{ self.prometheus__name() }}-{{ Values.alertmanager.name }}
          image: "{{ Values.alertmanager.image.repository }}:{{ Values.alertmanager.image.tag }}"
          imagePullPolicy: "{{ Values.alertmanager.image.pullPolicy }}"
          env:
            {%- for key, value in Values.alertmanager.extraEnv.iteritems() %}
            - name: {{ key }}
              value: {{ value }}
            {%- endfor %}
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path={{ Values.alertmanager.persistentVolume.mountPath }}
          {%- for key, value in Values.alertmanager.extraArgs.iteritems() %}
            - --{{ key }}={{ value }}
          {%- endfor %}
          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: {{ Values.alertmanager.baseURL }}/#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml(Values.alertmanager.resources) | indent(12) }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ Values.alertmanager.persistentVolume.mountPath }}"
              subPath: "{{ Values.alertmanager.persistentVolume.subPath }}"

        - name: {{ self.prometheus__name() }}-{{ Values.alertmanager.name }}-{{ Values.configmapReload.name }}
          image: "{{ Values.configmapReload.image.repository }}:{{ Values.configmapReload.image.tag }}"
          imagePullPolicy: "{{ Values.configmapReload.image.pullPolicy }}"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9093{{ Values.alertmanager.baseURL }}/-/reload
          resources:
{{ toYaml(Values.configmapReload.resources) | indent(12) }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
    {%- if Values.alertmanager.nodeSelector %}
      nodeSelector:
{{ toYaml(Values.alertmanager.nodeSelector) | indent(8) }}
    {%- endif %}
      volumes:
        - name: config-volume
          configMap:
            name: {%- if Values.alertmanager.configMapOverrideName %}{{ Release.Name }}-{{ Values.alertmanager.configMapOverrideName }}{%- else %}{{ self.prometheus__alertmanager__fullname() }}{%- endif %}
        - name: storage-volume
        {%- if Values.alertmanager.persistentVolume.enabled %}
          persistentVolumeClaim:
            claimName: {%- if Values.alertmanager.persistentVolume.existingClaim %}{{ Values.alertmanager.persistentVolume.existingClaim }}{%- else %}{{ self.prometheus__alertmanager__fullname() }}{%- endif %}
        {%- else %}
          emptyDir: {}
        {%- endif -%}
{%- endif %}
