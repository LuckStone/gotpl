apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ self.prometheus__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    component: "{{ Values.server.name }}"
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
  name: {{ self.prometheus__server__fullname() }}
spec:
  replicas: {{ Values.server.replicaCount }}
  {%- if Values.server.strategy %}
  strategy:
{{ toYaml(Values.server.strategy) | indent(4) }}
  {%- endif %}
  template:
    metadata:
    {%- if Values.server.podAnnotations %}
      annotations:
{{ toYaml(Values.server.podAnnotations) | indent(8) }}
    {%- endif %}
      labels:
        app: {{ self.prometheus__name() }}
        component: "{{ Values.server.name }}"
        release: {{ Release.Name }}
    spec:
      serviceAccountName: {%- if Values.rbac.create %}{{ self.prometheus__server__fullname() }}{%- else %}"{{ Values.server.serviceAccountName }}"{%- endif %}
      containers:
        - name: {{ self.prometheus__name() }}-{{ Values.server.name }}-{{ Values.configmapReload.name }}
          image: "{{ Values.configmapReload.image.repository }}:{{ Values.configmapReload.image.tag }}"
          imagePullPolicy: "{{ Values.configmapReload.image.pullPolicy }}"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9090{{ Values.server.baseURL }}/-/reload
          resources:
{{ toYaml(Values.configmapReload.resources) | indent(12) }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

        - name: {{ self.prometheus__name() }}-{{ Values.server.name }}
          image: "{{ Values.server.image.repository }}:{{ Values.server.image.tag }}"
          imagePullPolicy: "{{ Values.server.image.pullPolicy }}"
          args:
          {%- if Values.alertmanager.enabled or Values.server.alertmanagerURL %}
            - --alertmanager.url={%- if Values.alertmanager.enabled %}http://{{ self.prometheus__alertmanager__fullname() }}:{{ Values.alertmanager.service.servicePort }}{{ Values.alertmanager.baseURL }}{%- else %}{{ Values.server.alertmanagerURL }}{%- endif %}
          {%- endif %}
          {%- if Values.server.retention %}
            - --storage.local.retention = {{ Values.server.retention }}
          {%- endif %}
            - --config.file=/etc/config/prometheus.yml
            - --storage.local.path={{ Values.server.persistentVolume.mountPath }}
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
          {%- for key, value in Values.server.extraArgs.iteritems() %}
            - --{{ key }}={{ value }}
          {%- endfor %}
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: {{ Values.server.baseURL }}/status
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml(Values.server.resources) | indent(12) }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: {{ Values.alertmanager.persistentVolume.mountPath }}
              subPath: "{{ Values.server.persistentVolume.subPath }}"
          {%- for item in Values.server.extraHostPathMounts %}
            - name: {{ item.name }}
              mountPath: {{ item.mountPath }}
              readOnly: {{ item.readOnly }}
          {%- endfor %}
    {%- if Values.server.nodeSelector %}
      nodeSelector:
{{ toYaml(Values.server.nodeSelector) | indent(8) }}
    {%- endif %}
    {%- if Values.server.tolerations %}
      tolerations:
{{ toYaml(Values.server.tolerations) | indent(8) }}
    {%- endif %}
      terminationGracePeriodSeconds: {{ Values.server.terminationGracePeriodSeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: {%- if Values.server.configMapOverrideName %}{{ Release.Name }}-{{ Values.server.configMapOverrideName }}{%- else %}{{ self.prometheus__server__fullname() }}{%- endif %}
        - name: storage-volume
        {%- if Values.server.persistentVolume.enabled %}
          persistentVolumeClaim:
            claimName: {%- if Values.server.persistentVolume.existingClaim %}{{ Values.server.persistentVolume.existingClaim }}{%- else %}{{ self.prometheus__server__fullname() }}{%- endif %}
        {%- else %}
          emptyDir: {}
        {%- endif -%}
      {%- for item in Values.server.extraHostPathMounts %}
        - name: {{ item.name }}
          hostPath:
            path: {{ item.hostPath }}
      {%- endfor %}
