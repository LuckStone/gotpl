{%- if Values.persistence.enabled -%}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ self.jasperreports__fullname() }}
  labels:
    app: {{ self.jasperreports__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
  annotations:
  {%- if Values.persistence.storageClass %}
    volume.beta.kubernetes.io/storage-class: {{ Values.persistence.storageClass | quote() }}
  {%- else %}
    volume.alpha.kubernetes.io/storage-class: default
  {%- endif %}
spec:
  accessModes:
    - {{ Values.persistence.accessMode | quote() }}
  resources:
    requests:
      storage: {{ Values.persistence.size | quote() }}
{%- endif -%}
#---apiVersion: v1
kind: Secret
metadata:
  name: {{ self.jasperreports__fullname() }}
  labels:
    app: {{ self.jasperreports__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
type: Opaque
data:
  {%- if Values.jasperreportsPassword %}
  jasperreports-password: {{ Values.jasperreportsPassword | default("", true) | b64enc() | quote() }}
  {%- else %}
  jasperreports-password: {{ randAlphaNum(10) | b64enc() | quote() }}
  {%- endif %}
  smtp-password: {{ Values.smtpPassword | default("", true) | b64enc() | quote() }}
#---apiVersion: v1
kind: Service
metadata:
  name: {{ self.jasperreports__fullname() }}
  labels:
    app: {{ self.jasperreports__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  type: {{ Values.serviceType }}
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: {{ self.jasperreports__fullname() }}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.jasperreports__fullname() }}
  labels:
    app: {{ self.jasperreports__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ self.jasperreports__fullname() }}
    spec:
      containers:
      - name: {{ self.jasperreports__fullname() }}
        image: "{{ Values.image }}"
        imagePullPolicy: {{ Values.imagePullPolicy | default("", true) | quote() }}
        env:
        - name: MARIADB_HOST
          value: {{ self.jasperreports__mariadb__fullname() }}
        - name: MARIADB_PORT_NUMBER
          value: "3306"
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.jasperreports__mariadb__fullname() }}
              key: mariadb-root-password
        - name: JASPERREPORTS_USERNAME
          value: {{ Values.jasperreportsUsername | default("", true) | quote() }}
        - name: JASPERREPORTS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.jasperreports__fullname() }}
              key: jasperreports-password
        - name: JASPERREPORTS_EMAIL
          value: {{ Values.jasperreportsEmail | default("", true) | quote() }}
        - name: SMTP_HOST
          value: {{ Values.smtpHost | default("", true) | quote() }}
        - name: SMTP_PORT
          value: {{ Values.smtpPort | default("", true) | quote() }}
        - name: SMTP_EMAIL
          value: {{ Values.smtpEmail | default("", true) | quote() }}
        - name: SMTP_USER
          value: {{ Values.smtpUser | default("", true) | quote() }}
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.jasperreports__fullname() }}
              key: smtp-password
        - name: SMTP_PROTOCOL
          value: {{ Values.smtpProtocol | default("", true) | quote() }}
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /jasperserver/login.html
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /jasperserver/login.html
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
{{ toYaml(Values.resources) | indent(10) }}
        volumeMounts:
        - name: jasperreports-data
          mountPath: /bitnami/jasperreports
      volumes:
      - name: jasperreports-data
      {%- if Values.persistence.enabled %}
        persistentVolumeClaim:
          claimName: {{ self.jasperreports__fullname() }}
      {%- else %}
        emptyDir: {}
      {%- endif %}
