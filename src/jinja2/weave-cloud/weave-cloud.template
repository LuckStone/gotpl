apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: weave-cortex
      labels:
        name: weave-cortex
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: weave-cortex
      labels:
        name: weave-cortex
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - '*'
      - nonResourceURLs:
          - '*'
        verbs:
          - '*'
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: weave-cortex
      labels:
        name: weave-cortex
    roleRef:
      kind: ClusterRole
      name: weave-cortex
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: weave-cortex
        namespace: kube-system
  - apiVersion: apps/v1beta1
    kind: Deployment
    metadata:
      name: weave-cortex-agent
      labels:
        name: weave-cortex-agent
        app: weave-cortex
        weave-cloud-component: cortex
        weave-cortex-component: agent
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            name: weave-cortex-agent
            app: weave-cortex
            weave-cloud-component: cortex
            weave-cortex-component: agent
        spec:
          containers:
            - name: agent
              args:
                - '-config.file=/etc/prometheus/prometheus.yml'
                - '-web.listen-address=:8080'
                - '-storage.local.engine=none'
              image: 'prom/prometheus:v1.7.1'
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - name: agent-config-volume
                  mountPath: /etc/prometheus
          serviceAccountName: weave-cortex
          volumes:
            - name: agent-config-volume
              configMap:
                name: weave-cortex-agent-config
  - apiVersion: v1
    kind: Service
    metadata:
      name: weave-cortex-agent
      labels:
        name: weave-cortex-agent
        app: weave-cortex
        weave-cloud-component: cortex
        weave-cortex-component: agent
    spec:
      ports:
        - name: agent
          port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        name: weave-cortex-agent
        app: weave-cortex
        weave-cloud-component: cortex
        weave-cortex-component: agent
  - apiVersion: extensions/v1beta1
    kind: DaemonSet
    metadata:
      name: weave-cortex-node-exporter
      labels:
        name: weave-cortex-node-exporter
        app: weave-cortex
        weave-cloud-component: cortex
        weave-cortex-component: node-exporter
    spec:
      template:
        metadata:
          annotations:
            prometheus.io.scrape: 'true'
          labels:
            name: weave-cortex-node-exporter
            app: weave-cortex
            weave-cloud-component: cortex
            weave-cortex-component: node-exporter
        spec:
          containers:
            - name: agent
              image: 'prom/node-exporter:v0.14.0'
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 9100
                  protocol: TCP
              securityContext:
                privileged: true
          hostNetwork: true
          hostPID: true
          serviceAccountName: weave-cortex
          tolerations:
            - effect: NoSchedule
              operator: Exists
      updateStrategy:
        type: RollingUpdate
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: weave-cortex-agent-config
      labels:
        name: weave-cortex-agent-config
        app: weave-cortex
        weave-cloud-component: cortex
        weave-cortex-component: agent-config
    data:
      prometheus.yml: |
        global:
          scrape_interval: 15s
        remote_write:
          - url: 'https://cloud.weave.works/api/prom/push'
            basic_auth:
              password: '{{ Values.ServiceToken }}'
        scrape_configs:
          - job_name: kubernetes-service-endpoints
            kubernetes_sd_configs:
              - role: endpoints
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
              - source_labels:
                  - __meta_kubernetes_service_label_component
                regex: apiserver
                action: replace
                target_label: __scheme__
                replacement: https
              - source_labels:
                  - __meta_kubernetes_service_label_kubernetes_io_cluster_service
                action: drop
                regex: 'true'
              - source_labels:
                  - __meta_kubernetes_service_annotation_prometheus_io_scrape
                action: drop
                regex: 'false'
              - source_labels:
                  - __meta_kubernetes_pod_container_port_name
                action: drop
                regex: .*-noscrape
              - source_labels:
                  - __meta_kubernetes_service_annotation_prometheus_io_scheme
                action: replace
                target_label: __scheme__
                regex: ^(https?)$
                replacement: $1
              - source_labels:
                  - __meta_kubernetes_service_annotation_prometheus_io_path
                action: replace
                target_label: __metrics_path__
                regex: ^(.+)$
                replacement: $1
              - source_labels:
                  - __address__
                  - __meta_kubernetes_service_annotation_prometheus_io_port
                action: replace
                target_label: __address__
                regex: '^(.+)(?::\d+);(\d+)$'
                replacement: '$1:$2'
              - action: labelmap
                regex: ^__meta_kubernetes_service_label_(.+)$
                replacement: $1
              - source_labels:
                  - __meta_kubernetes_namespace
                  - __meta_kubernetes_service_name
                separator: /
                target_label: job
          - job_name: kubernetes-pods
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels:
                  - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                action: keep
                regex: 'true'
              - source_labels:
                  - __meta_kubernetes_namespace
                  - __meta_kubernetes_pod_label_name
                separator: /
                target_label: job
              - source_labels:
                  - __meta_kubernetes_pod_node_name
                target_label: node
          - job_name: kubernetes-nodes
            kubernetes_sd_configs:
              - role: node
            tls_config:
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
              - target_label: __scheme__
                replacement: https
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - source_labels:
                  - __meta_kubernetes_node_label_kubernetes_io_hostname
                target_label: instance
              - target_label: __address__
                replacement: 'kubernetes.default.svc:443'
              - source_labels:
                  - __meta_kubernetes_node_name
                regex: (.+)
                target_label: __metrics_path__
                replacement: '/api/v1/nodes/${1}/proxy/metrics'
          - job_name: weave
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels:
                  - __meta_kubernetes_namespace
                  - __meta_kubernetes_pod_label_name
                action: keep
                regex: ^kube-system;weave-net$
              - source_labels:
                  - __meta_kubernetes_pod_container_name
                  - __address__
                action: replace
                target_label: __address__
                regex: '^weave;(.+?)(?::\d+)?$'
                replacement: '$1:6782'
              - source_labels:
                  - __meta_kubernetes_pod_container_name
                  - __address__
                action: replace
                target_label: __address__
                regex: '^weave-npc;(.+?)(?::\d+)?$'
                replacement: '$1:6781'
              - source_labels:
                  - __meta_kubernetes_pod_container_name
                action: replace
                target_label: job
#---apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: weave-flux
      labels:
        name: weave-flux
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: weave-flux
      labels:
        name: weave-flux
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - '*'
      - nonResourceURLs:
          - '*'
        verbs:
          - '*'
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: weave-flux
      labels:
        name: weave-flux
    roleRef:
      kind: ClusterRole
      name: weave-flux
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: weave-flux
        namespace: kube-system
  - apiVersion: apps/v1beta1
    kind: Deployment
    metadata:
      name: weave-flux-agent
      labels:
        name: weave-flux-agent
        app: weave-flux
        weave-cloud-component: flux
        weave-flux-component: agent
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            name: weave-flux-agent
            app: weave-flux
            weave-cloud-component: flux
            weave-flux-component: agent
        spec:
          containers:
            - name: agent
              args:
                - '--token={{ Values.ServiceToken }}'
              image: 'quay.io/weaveworks/fluxd:0.3.0'
              imagePullPolicy: IfNotPresent
          serviceAccountName: weave-flux
#---apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: weave-scope
      labels:
        name: weave-scope
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: weave-scope
      labels:
        name: weave-scope
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - '*'
      - nonResourceURLs:
          - '*'
        verbs:
          - '*'
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: weave-scope
      labels:
        name: weave-scope
    roleRef:
      kind: ClusterRole
      name: weave-scope
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: weave-scope
        namespace: kube-system
  - apiVersion: extensions/v1beta1
    kind: DaemonSet
    metadata:
      name: weave-scope-agent
      labels:
        name: weave-scope-agent
        app: weave-scope
        weave-cloud-component: scope
        weave-scope-component: agent
    spec:
      template:
        metadata:
          labels:
            name: weave-scope-agent
            app: weave-scope
            weave-cloud-component: scope
            weave-scope-component: agent
        spec:
          containers:
            - name: agent
              args:
                - '--no-app'
                - '--probe.docker.bridge=docker0'
                - '--probe.docker=true'
                - '--probe.kubernetes=true'
                - '--service-token={{ Values.ServiceToken }}'
              image: 'weaveworks/scope:1.6.2'
              imagePullPolicy: IfNotPresent
              securityContext:
                privileged: true
              volumeMounts:
                - name: docker-socket
                  mountPath: /var/run/docker.sock
                - name: scope-plugins
                  mountPath: /var/run/scope/plugins
                - name: sys-kernel-debug
                  mountPath: /sys/kernel/debug
          hostNetwork: true
          hostPID: true
          serviceAccountName: weave-scope
          tolerations:
            - effect: NoSchedule
              operator: Exists
          volumes:
            - name: docker-socket
              hostPath:
                path: /var/run/docker.sock
            - name: scope-plugins
              hostPath:
                path: /var/run/scope/plugins
            - name: sys-kernel-debug
              hostPath:
                path: /sys/kernel/debug
      updateStrategy:
        type: RollingUpdate
