{%- if Values.lego.enabled %}
apiVersion: v1
metadata:
  name: {{ self.nginx-lego__fullname() }}-lego
data:
  # modify this to specify your address
  lego.email: {{ Values.lego.configmap.email | quote() }}
  # configure letencrypt's production api
  lego.url: {{ Values.lego.configmap.url | quote() }}
kind: ConfigMap
{%- endif %}
#---apiVersion: v1
data:
  proxy-connect-timeout: {{ Values.nginx.configmap.proxy_connect_timeout | quote() }}
  proxy-read-timeout: {{ Values.nginx.configmap.proxy_read_timeout | quote() }}
  proxy-send-imeout: {{ Values.nginx.configmap.proxy_send_imeout | quote() }}
  hsts-include-subdomains: {{ Values.nginx.configmap.hsts_include_subdomains | quote() }}
  body-size: {{ Values.nginx.configmap.body_size | quote() }}
  server-name-hash-bucket-size: {{ Values.nginx.configmap.server_name_hash_bucket_size | quote() }}
  enable-vts-status: {{ Values.nginx.configmap.enable_vts_status | quote() }}
kind: ConfigMap
metadata:
  name: {{ self.nginx-lego__fullname() }}
#---apiVersion: v1
kind: Service
metadata:
  name: {{ self.nginx-lego__fullname() }}-default-backend
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: {{ self.nginx-lego__fullname() }}-default-backend
#---{%- if Values.nginx.monitoring %}
apiVersion: v1
kind: Service
metadata:
  name: {{ self.nginx-lego__fullname() }}-monitoring
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  type: ClusterIP
  ports:
  - port: 18080
    name: vts-stats
  selector:
    app: {{ self.nginx-lego__fullname() }}
{%- endif %}#---apiVersion: v1
kind: Service
metadata:
  name: {{ self.nginx-lego__fullname() }}
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  type: {{ Values.nginx.service.type | quote() }}
  ports:
  - port: 80
    name: http
  - port: 443
    name: https
  selector:
    app: {{ self.nginx-lego__fullname() }}#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.nginx-lego__fullname() }}-default-backend
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  replicas: {{ Values.default.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ self.nginx-lego__fullname() }}-default-backend
    spec:
      containers:
      - name: {{ self.nginx-lego__fullname() }}-default-backend
        image: "{{ Values.default.image.repository }}:{{ Values.default.image.tag }}"
        imagePullPolicy: {{ Values.default.image.pullPolicy | quote() }}
        ports:
        - containerPort: 8080
        resources:
{{ toYaml(Values.default.resources) | indent(10) }}#---{%- if Values.lego.enabled %}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.nginx-lego__fullname() }}-lego
spec:
  replicas: {{ Values.lego.replicaCount }}
  template:
    metadata:
      labels:
        app: kube-lego
    spec:
      containers:
      - name: {{ Chart.Name }}-lego
        image: "{{ Values.lego.image.repository }}:{{ Values.lego.image.tag }}"
        imagePullPolicy: {{ Values.lego.image.pullPolicy }}
        ports:
        - containerPort: 8080
        env:
        - name: LEGO_EMAIL
          valueFrom:
            configMapKeyRef:
              name: {{ self.nginx-lego__fullname() }}-lego
              key: lego.email
        - name: LEGO_URL
          valueFrom:
            configMapKeyRef:
              name: {{ self.nginx-lego__fullname() }}-lego
              key: lego.url
        - name: LEGO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LEGO_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
{{ toYaml(Values.nginx.resources) | indent(10) }}
{%- endif %}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.nginx-lego__fullname() }}
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
spec:
  replicas: {{ Values.nginx.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ self.nginx-lego__fullname() }}
    spec:
      containers:
      - name: {{ Chart.Name }}
        image: "{{ Values.nginx.image.repository }}:{{ Values.nginx.image.tag }}"
        imagePullPolicy: {{ Values.nginx.image.pullPolicy }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
        - containerPort: 80
        - containerPort: 443
{%- if Values.nginx.monitoring %}
        - containerPort: 8080
{%- endif %}
        resources:
{{ toYaml(Values.nginx.resources) | indent(10) }}
        args:
        - /nginx-ingress-controller
        - --default-backend-service={{ Release.Namespace }}/{{ self.nginx-lego__fullname() }}-default-backend
        - --nginx-configmap={{ Release.Namespace }}/{{ self.nginx-lego__fullname() }}