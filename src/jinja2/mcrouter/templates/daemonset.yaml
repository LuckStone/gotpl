{%- if Values.controller=="daemonset" %}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ self.fullname() }}
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
  annotations:
    checksum/config: ""
spec:
  template:
    metadata:
      labels:
        app: {{ self.fullname() }}
        chart: "{{ Chart.Name }}-{{ Chart.Version }}"
        release: "{{ Release.Name }}"
    spec:
      containers:
      - name: {{ self.fullname() }}
        image: {{ Values.image }}
        imagePullPolicy: {{ Values.imagePullPolicy | default("", true) | quote() }}
        command: ["mcrouter"]
        args:
        - -p {{ Values.mcrouterCommandParams.port }}
        - --config-file=/etc/mcrouter/config.json
        volumeMounts:
        - name: config
          mountPath: /etc/mcrouter
        ports:
        - name: mcrouter-port
          containerPort: {{ Values.mcrouterCommandParams.port }}
          hostPort: {{ Values.daemonset.hostPort }}
        livenessProbe:
          tcpSocket:
            port: mcrouter-port
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: mcrouter-port
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml(Values.resources) | indent(10) }}
      volumes:
      - name: config
        configMap:
          name: {{ self.fullname() }}
{%- endif -%}