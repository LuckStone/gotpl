{%- if Values.rbac.create -%}
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: {{ self.kube-state-metrics__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
  name: {{ self.kube-state-metrics__fullname() }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ self.kube-state-metrics__fullname() }}
subjects:
  - kind: ServiceAccount
    name: {{ self.kube-state-metrics__fullname() }}
    namespace: {{ Release.Namespace }}
{%- endif -%}
#---{%- if Values.rbac.create -%}
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: {{ self.kube-state-metrics__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
  name: {{ self.kube-state-metrics__fullname() }}
rules:
- apiGroups: [""]
  resources:
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  verbs: ["list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs: ["list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]
- apiGroups: ["batch"]
  resources:
  - cronjobs
  - jobs
  verbs: ["list", "watch"]
{%- endif -%}
#---{%- if Values.rbac.create -%}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: {{ self.kube-state-metrics__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
  name: {{ self.kube-state-metrics__fullname() }}
{%- endif -%}
#---apiVersion: v1
kind: Service
metadata:
  name: {{ self.kube-state-metrics__fullname() }}
  labels:
    app: {{ self.kube-state-metrics__name() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
  {%- if Values.prometheusScrape %}
  annotations:
    prometheus.io/scrape: '{{ Values.prometheusScrape }}'
  {%- endif %}
spec:
  type: "{{ Values.service.type }}"
  ports:
  - name: "http"
    protocol: TCP
    port: {{ Values.service.port }}
  {%- if Values.service.nodePort %}
    nodePort: {{ Values.service.nodePort }}
  {%- endif %}
    targetPort: 8080
{%- if Values.service.loadBalancerIP %}
  loadBalancerIP: "{{ Values.service.loadBalancerIP }}"
{%- endif %}
  selector:
    app: {{ self.kube-state-metrics__name() }}
    release: {{ Release.Name }}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.kube-state-metrics__fullname() }}
  labels:
    app: {{ self.kube-state-metrics__name() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ self.kube-state-metrics__name() }}
        release: "{{ Release.Name }}"
    spec:
      serviceAccountName: {%- if Values.rbac.create %}{{ self.kube-state-metrics__fullname() }}{%- else %}"{{ Values.rbac.serviceAccountName }}"{%- endif %}
      containers:
      - name: {{ Chart.Name }}
        imagePullPolicy: {{ Values.image.pullPolicy }}
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        ports:
        - containerPort: 8080
        resources:
{{ toYaml(Values.resources) | indent(12) }}
