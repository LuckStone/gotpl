apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.openvpn__fullname() }}
  namespace: {{ Release.Namespace }}
data:
  setup-certs.sh: |-
    #!/bin/bash
    EASY_RSA_LOC="/etc/openvpn/certs"
    SERVER_CERT="${EASY_RSA_LOC}/pki/issued/server.crt"
    if [ -e "$SERVER_CERT" ]
    then
      echo "found existing certs - reusing"
    else
      cp -R /usr/share/easy-rsa/* $EASY_RSA_LOC
      cd $EASY_RSA_LOC
      ./easyrsa init-pki
      echo "ca\n" | ./easyrsa build-ca nopass
      ./easyrsa build-server-full server nopass
      ./easyrsa gen-dh
    fi


  newClientCert.sh: |-
      #!/bin/bash
      EASY_RSA_LOC="/etc/openvpn/certs"
      cd $EASY_RSA_LOC
      MY_IP_ADDR="$2"
      ./easyrsa build-client-full $1 nopass
      cat >${EASY_RSA_LOC}/pki/$1.ovpn <<EOF
      client
      nobind
      dev tun
      redirect-gateway def1
      <key>
      `cat ${EASY_RSA_LOC}/pki/private/$1.key`
      </key>
      <cert>
      `cat ${EASY_RSA_LOC}/pki/issued/$1.crt`
      </cert>
      <ca>
      `cat ${EASY_RSA_LOC}/pki/ca.crt`
      </ca>
      <dh>
      `cat ${EASY_RSA_LOC}/pki/dh.pem`
      </dh>
      <connection>
      remote ${MY_IP_ADDR} {{ Values.service.externalPort }} {{ Values.openvpn.OVPN_PROTO }}
      </connection>
      EOF
      cat pki/$1.ovpn

  configure.sh: |-
      #!/bin/sh
      /etc/openvpn/setup/setup-certs.sh
      iptables -t nat -A POSTROUTING -s {{ Values.openvpn.OVPN_NETWORK }}/{{ Values.openvpn.OVPN_SUBNET }} -o eth0 -j MASQUERADE
      mkdir -p /dev/net
      if [ ! -c /dev/net/tun ]; then
          mknod /dev/net/tun c 10 200
      fi

      if [ "$DEBUG" == "1" ]; then
          echo ========== ${OVPN_CONFIG} ==========
          cat "${OVPN_CONFIG}"
          echo ====================================
      fi
      IP=$(ip route get 8.8.8.8 | awk '/8.8.8.8/ {print $NF}')
      BASEIP=`echo $IP | cut -d"." -f1-3`
      NETWORK=`echo $BASEIP".0"`
      DNS=$(cat /etc/resolv.conf | grep -v '^#' | grep nameserver | awk '{print $2}')
      SEARCH=$(cat /etc/resolv.conf | grep -v '^#' | grep search | awk '{$1=""; print $0}')
      cp -f /etc/openvpn/setup/openvpn.conf /etc/openvpn/
      sed 's|OVPN_K8S_SEARCH|'"${SEARCH}"'|' -i /etc/openvpn/openvpn.conf
      sed 's|OVPN_K8S_DNS|'"${DNS}"'|' -i /etc/openvpn/openvpn.conf
      sed 's|NETWORK|'"${NETWORK}"'|' -i /etc/openvpn/openvpn.conf

      openvpn --config /etc/openvpn/openvpn.conf
  openvpn.conf: |-
      server {{ Values.openvpn.OVPN_NETWORK }} {{ Values.openvpn.OVPN_SUBNET }}
      verb 3
      key /etc/openvpn/certs/pki/private/server.key
      ca /etc/openvpn/certs/pki/ca.crt
      cert /etc/openvpn/certs/pki/issued/server.crt
      dh /etc/openvpn/certs/pki/dh.pem

      key-direction 0
      keepalive 10 60
      persist-key
      persist-tun

      proto {{ Values.openvpn.OVPN_PROTO }}
      port  {{ Values.service.internalPort }}
      dev tun0
      status /tmp/openvpn-status.log

      user nobody
      group nogroup

      push "route NETWORK 255.255.240.0"
{%- if ( Values.openvpn.OVPN_K8S_POD_NETWORK)  (Values.openvpn.OVPN_K8S_POD_SUBNE)) %}
      push "route {{ Values.openvpn.OVPN_K8S_POD_NETWORK }} {{ Values.openvpn.OVPN_K8S_POD_SUBNET }}"
{%- endif %}

      push "dhcp-option DOMAIN OVPN_K8S_SEARCH"
      push "dhcp-option DNS OVPN_K8S_DNS"

      {%- if Values.openvpn.conf %}
{{ indent 6 Values.openvpn.conf }}
      {%- endif -%}
#---{%- if Values.persistence.enabled %}

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ self.openvpn__fullname() }}
  namespace: {{ Release.Namespace }}
  labels:
    app: {{ self.openvpn__fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  accessModes:
    - {{ Values.persistence.accessMode | quote() }}
  resources:
    requests:
      storage: {{ Values.persistence.size | quote() }}
{%- if Values.persistence.storageClass %}
{%- if ("-"==Values.persistence.storageClass) %}
  storageClassName: ""
{%- else %}
  storageClassName: "{{ Values.persistence.storageClass }}"
{%- endif %}
{%- endif %}
{%- endif %}
#---kind: Service
apiVersion: v1
metadata:
  name: {{ self.openvpn__fullname() }}
  namespace: {{ Release.Namespace }}
  labels:
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    type: openvpn
spec:
  ports:
    - name: openvpn
      port: {{ Values.service.externalPort }}
      targetPort: {{ Values.service.internalPort }}
      protocol: {{ Values.openvpn.OVPN_PROTO | upper() }}
  selector:
    app: {{ self.openvpn__fullname() }}
  type: {{ Values.service.type }}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.openvpn__fullname() }}
  namespace: {{ Release.Namespace }}
  labels:
    heritage: {{ Release.Service | quote() }}
    release: {{ Release.Name | quote() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version }}"

spec:
  replicas: {{ Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ self.openvpn__fullname() }}
        type: openvpn
        heritage: {{ Release.Service | quote() }}
        release: {{ Release.Name | quote() }}
        chart: "{{ Chart.Name }}-{{ Chart.Version }}"
    spec:
      containers:
      - name: {{ Chart.Name }}
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        command: ["/etc/openvpn/setup/configure.sh"]
        ports:
        - containerPort: {{ Values.service.internalPort }}
          name: openvpn
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        resources:
          requests:
            cpu: "{{ Values.resources.requests.cpu }}"
            memory: "{{ Values.resources.requests.memory }}"
          limits:
            cpu: "{{ Values.resources.limits.cpu }}"
            memory: "{{ Values.resources.limits.memory }}"
        volumeMounts:
          - mountPath: /etc/openvpn/setup
            name: openvpn
            readOnly: false
          - mountPath: /etc/openvpn/certs
            name: certs
            readOnly: false
      volumes:
      - name: openvpn
        configMap:
          name: {{ self.openvpn__fullname() }}
          defaultMode: 0775
      - name: certs
        {%- if Values.persistence.enabled %}
        persistentVolumeClaim:
          claimName: {{ self.openvpn__fullname() }}
        {%- else %}
        emptyDir: {}
        {%- endif -%}
