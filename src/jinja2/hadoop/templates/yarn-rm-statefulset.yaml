apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ self.hadoop__fullname() }}-yarn-rm
  annotations:
    checksum/config: ""
  labels:
    app: {{ self.hadoop__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}
    release: {{ Release.Name }}
    heritage: {{ Release.Service }}
    component: yarn-rm
spec:
  serviceName: {{ self.hadoop__fullname() }}-yarn-rm
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ self.hadoop__name() }}
        release: {{ Release.Name }}
        component: yarn-rm
    spec:
      affinity:
        podAntiAffinity:
        {%- if Values.antiAffinity=="hard" %}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ self.hadoop__name() }}
                release: {{ Release.Name | quote() }}
                component: yarn-rm
        {%- elif Values.antiAffinity=="soft" %}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  {{ self.hadoop__name() }}
                  release: {{ Release.Name | quote() }}
                  component: yarn-rm
        {%- endif %}
      terminationGracePeriodSeconds: 0
      containers:
      - name: yarn-rm
        image: {{ Values.image }}
        imagePullPolicy: {{ Values.imagePullPolicy }}
        ports:
        - containerPort: 8088
          name: web
        command:
           - "/bin/bash"
           - "/tmp/hadoop-config/bootstrap.sh"
           - "-d"
        resources:
{{ toYaml(Values.yarn.resourceManager.resources) | indent(10) }}
        readinessProbe:
          httpGet:
            path: /ws/v1/cluster/info
            port: 8088
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ws/v1/cluster/info
            port: 8088
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ self.hadoop__fullname() }}
