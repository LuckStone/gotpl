apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ self.hadoop__fullname() }}-hdfs-dn
  annotations:
    checksum/config: ""
  labels:
    app: {{ self.hadoop__name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}
    release: {{ Release.Name }}
    heritage: {{ Release.Service }}
    component: hdfs-dn
spec:
  serviceName: {{ self.hadoop__fullname() }}-hdfs-dn
  replicas: {{ Values.hdfs.dataNode.replicas }}
  template:
    metadata:
      labels:
        app: {{ self.hadoop__name() }}
        release: {{ Release.Name }}
        component: hdfs-dn
    spec:
      affinity:
        podAntiAffinity:
        {%- if Values.antiAffinity=="hard" %}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ self.hadoop__name() }}
                release: {{ Release.Name | quote() }}
                component: hdfs-dn
        {%- elif Values.antiAffinity=="soft" %}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  {{ self.hadoop__name() }}
                  release: {{ Release.Name | quote() }}
                  component: hdfs-dn
        {%- endif %}
      terminationGracePeriodSeconds: 0
      containers:
      - name: hdfs-dn
        image: {{ Values.image }}
        imagePullPolicy: {{ Values.imagePullPolicy }}
        command:
           - "/bin/bash"
           - "/tmp/hadoop-config/bootstrap.sh"
           - "-d"
        resources:       
{{ toYaml(Values.hdfs.dataNode.resources) | indent(10) }}
        readinessProbe:
          httpGet:
            path: /
            port: 50075
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /
            port: 50075
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
        - name: dfs
          mountPath: /root/hdfs/datanode
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ self.hadoop__fullname() }}
      - name: dfs
      {%- if Values.persistence.dataNode.enabled %}
        persistentVolumeClaim:
          claimName: {{ self.hadoop__fullname() }}-hdfs-dn
      {%- else %}        
        emptyDir: {}
      {%- endif %}
