{%- if Values.ingress.enabled -%}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: {{ self.fullname() }}
 labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
 annotations:
   {%- for key, value in Values.ingress.annotations.iteritems() %}
     {{ key }}: {{ value | quote() }}
   {%- endfor %}
spec:
  rules:
    - host: {{ Values.ingress.hostname }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ self.fullname() }}
              servicePort: {{ Values.service.externalPort }}
{%- if Values.ingress.tls %}
  tls:
{{ toYaml(Values.ingress.tls) | indent(4) }}
{%- endif -%}
{%- endif -%}
#---{%- if Values.persistence.enabled -%}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ self.fullname() }}
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  accessModes:
    - {{ Values.persistence.accessMode | quote() }}
  resources:
    requests:
      storage: {{ Values.persistence.size | quote() }}
{%- if Values.persistence.storageClass %}
{%- if ("-"==Values.persistence.storageClass) %}
  storageClassName: ""
{%- else %}
  storageClassName: "{{ Values.persistence.storageClass }}"
{%- endif %}
{%- endif %}
{%- endif -%}
#---apiVersion: v1
kind: Secret
metadata:
  name: {{ self.fullname() }}
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
type: Opaque
data:
  {%- if Values.sentrySecret %}
  sentry-secret: {{ Values.sentrySecret | b64enc() | quote() }}
  {%- else %}
  sentry-secret: {{ randAlphaNum(40) | b64enc() | quote() }}
  {%- endif %}
  smtp-password: {{ Values.email.password | default("", true) | b64enc() | quote() }}
  user-password: {{ randAlphaNum(16) | b64enc() | quote() }}
#---apiVersion: v1
kind: Service
metadata:
  name: {{ self.fullname() }}
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  type: {{ Values.service.type }}
  ports:
  - port: {{ Values.service.externalPort }}
    targetPort: {{ Values.service.internalPort }}
    protocol: TCP
    name: {{ Values.service.name }}
  selector:
    app: {{ self.fullname() }}
    role: web
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.fullname() }}-cron
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  replicas: {{ Values.cron.replicacount }}
  template:
    metadata:
      labels:
        app: {{ self.fullname() }}
        release: "{{ Release.Name }}"
        role: cron
    spec:
      containers:
      - name: {{ Chart.Name }}-cron
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        args: ["run", "cron"]
        ports:
        - containerPort: {{ Values.service.internalPort }}
        env:
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ self.fullname() }}
              key: sentry-secret
        - name: SENTRY_DB_USER
          value: {{ Values.postgresUser | default("sentry", true) | quote() }}
        - name: SENTRY_DB_NAME
          value: {{ Values.postgresDatabase | default("sentry", true) | quote() }}
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.postgresql__fullname() }}
              key: postgres-password
        - name: SENTRY_POSTGRES_HOST
          value: {{ self.postgresql__fullname() }}
        - name: SENTRY_POSTRGES_PORT
          value: "5432"
        - name: SENTRY_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.redis__fullname() }}
              key: redis-password
        - name: SENTRY_REDIS_HOST
          value: {{ self.redis__fullname() }}
        - name: SENTRY_REDIS_PORT
          value: "6379"
        - name: SENTRY_EMAIL_HOST
          value: {{ Values.email.host | default("", true) | quote() }}
        - name: SENTRY_EMAIL_PORT
          value: {{ Values.email.port | default("", true) | quote() }}
        - name: SENTRY_EMAIL_USER
          value: {{ Values.email.user | default("", true) | quote() }}
        - name: SENTRY_EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.fullname() }}
              key: smtp-password
        resources:
{{ toYaml(Values.cron.resources) | indent(12) }}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.fullname() }}-web
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  replicas: {{ Values.web.replicacount }}
  template:
    metadata:
      labels:
        app: {{ self.fullname() }}
        release: "{{ Release.Name }}"
        role: web
    spec:
      containers:
      - name: {{ Chart.Name }}-web
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        ports:
        - containerPort: {{ Values.service.internalPort }}
        env:
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ self.fullname() }}
              key: sentry-secret
        - name: SENTRY_DB_USER
          value: {{ Values.postgresUser | default("sentry", true) | quote() }}
        - name: SENTRY_DB_NAME
          value: {{ Values.postgresDatabase | default("sentry", true) | quote() }}
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.postgresql__fullname() }}
              key: postgres-password
        - name: SENTRY_POSTGRES_HOST
          value: {{ self.postgresql__fullname() }}
        - name: SENTRY_POSTRGES_PORT
          value: "5432"
        - name: SENTRY_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.redis__fullname() }}
              key: redis-password
        - name: SENTRY_REDIS_HOST
          value: {{ self.redis__fullname() }}
        - name: SENTRY_REDIS_PORT
          value: "6379"
        - name: SENTRY_EMAIL_HOST
          value: {{ Values.email.host | default("", true) | quote() }}
        - name: SENTRY_EMAIL_PORT
          value: {{ Values.email.port | default("", true) | quote() }}
        - name: SENTRY_EMAIL_USER
          value: {{ Values.email.user | default("", true) | quote() }}
        - name: SENTRY_EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.fullname() }}
              key: smtp-password
        volumeMounts:
        - mountPath: {{ Values.persistence.filestore_dir }}
          name: sentry-data
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /_health/
            port: {{ Values.service.internalPort }}
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /_health/
            port: {{ Values.service.internalPort }}
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
{{ toYaml(Values.web.resources) | indent(12) }}
      volumes:
      - name: sentry-data
      {%- if Values.persistence.enabled %}
        persistentVolumeClaim:
          claimName: {{ self.fullname() }}
      {%- else %}
        emptyDir: {}
      {%- endif %}
#---apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ self.fullname() }}-worker
  labels:
    app: {{ self.fullname() }}
    chart: "{{ Chart.Name }}-{{ Chart.Version | replace("+","_") }}"
    release: "{{ Release.Name }}"
    heritage: "{{ Release.Service }}"
spec:
  replicas: {{ Values.worker.replicacount }}
  template:
    metadata:
      labels:
        app: {{ self.fullname() }}
        release: "{{ Release.Name }}"
        role: worker
    spec:
      containers:
      - name: {{ Chart.Name }}-workers
        image: "{{ Values.image.repository }}:{{ Values.image.tag }}"
        imagePullPolicy: {{ Values.image.pullPolicy }}
        args: ["run", "worker"]
        ports:
        - containerPort: {{ Values.service.internalPort }}
        env:
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ self.fullname() }}
              key: sentry-secret
        - name: SENTRY_DB_USER
          value: {{ Values.postgresUser | default("sentry", true) | quote() }}
        - name: SENTRY_DB_NAME
          value: {{ Values.postgresDatabase | default("sentry", true) | quote() }}
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.postgresql__fullname() }}
              key: postgres-password
        - name: SENTRY_POSTGRES_HOST
          value: {{ self.postgresql__fullname() }}
        - name: SENTRY_POSTGRES_PORT
          value: "5432"
        - name: SENTRY_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.redis__fullname() }}
              key: redis-password
        - name: SENTRY_REDIS_HOST
          value: {{ self.redis__fullname() }}
        - name: SENTRY_REDIS_PORT
          value: "6379"
        - name: SENTRY_EMAIL_HOST
          value: {{ Values.email.host | default("", true) | quote() }}
        - name: SENTRY_EMAIL_PORT
          value: {{ Values.email.port | default("", true) | quote() }}
        - name: SENTRY_EMAIL_USER
          value: {{ Values.email.user | default("", true) | quote() }}
        - name: SENTRY_EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ self.fullname() }}
              key: smtp-password
        resources:
{{ toYaml(Values.worker.resources) | indent(12) }}
