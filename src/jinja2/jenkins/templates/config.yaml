{%- if  not  Values.Master.CustomConfigMap %}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ self.jenkins__fullname() }}
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>{{ Values.Master.ImageTag }}</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>{{ Values.Master.UseSecurity }}</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@0.11">
          <name>kubernetes</name>
          <templates>
{%- if Values.Agent.Enabled %}
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>default</name>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>{{ Release.Name }}-{{ Values.Agent.Component }}</label>
              <nodeSelector>
                {%- for key, value in Values.Agent.NodeSelector.iteritems() %}
                  {{- key }}={{ value }},
                {%- endfor %}</nodeSelector>
              <volumes>
{%- for index, volume in Values.Agent.volumes.iteritems() %}
                <org.csanchez.jenkins.plugins.kubernetes.volumes.{{ volume.type }}Volume>
{%- range key, value := volume %}{%- if  not  (key=="type") %}
                  <{{ key }}>{{ value }}</{{ key }}>
{%- endif %}{%- endif %}
                </org.csanchez.jenkins.plugins.kubernetes.volumes.{{ volume.type }}Volume>
{%- endfor %}
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>{{ Values.Agent.Image }}:{{ Values.Agent.ImageTag }}</image>
{%- if Values.Agent.Privileged %}
                  <privileged>true</privileged>
{%- else %}
                  <privileged>false</privileged>
{%- endif %}
                  <alwaysPullImage>{{ Values.Agent.AlwaysPullImage }}</alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>{{ Values.Agent.Cpu }}</resourceRequestCpu>
                  <resourceRequestMemory>{{ Values.Agent.Memory }}</resourceRequestMemory>
                  <resourceLimitCpu>{{ Values.Agent.Cpu }}</resourceLimitCpu>
                  <resourceLimitMemory>{{ Values.Agent.Memory }}</resourceLimitMemory>
                  <envVars>
                    <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                      <key>JENKINS_URL</key>
                      <value>http://{{ self.jenkins__fullname() }}:{{ Values.Master.ServicePort }}{{ Values.Master.JenkinsUriPrefix | default("", true) }}</value>
                    </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  </envVars>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars/>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
{%- endif -%}
          </templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>{{ Release.Namespace }}</namespace>
          <jenkinsUrl>http://{{ self.jenkins__fullname() }}:{{ Values.Master.ServicePort }}{{ Values.Master.JenkinsUriPrefix | default("", true) }}</jenkinsUrl>
          <jenkinsTunnel>{{ self.jenkins__fullname() }}-agent:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <nodeProperties/>
      <globalNodeProperties/>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
{%- if Values.Master.ScriptApproval %}
  scriptapproval.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <scriptApproval plugin="script-security@1.27">
      <approvedScriptHashes/>
      <approvedSignatures>
{%- for key, val in Values.Master.ScriptApproval.iteritems() %}
        <string>{{ val }}</string>
{%- endfor %}
      </approvedSignatures>
      <aclApprovedSignatures/>
      <approvedClasspathEntries/>
      <pendingScripts/>
      <pendingSignatures/>
      <pendingClasspathEntries/>
    </scriptApproval>
{%- endif %}
  apply_config.sh: |-
    mkdir -p /usr/share/jenkins/ref/secrets/;
    echo "false" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;
    cp -n /var/jenkins_config/config.xml /var/jenkins_home;
{%- if Values.Master.InstallPlugins %}
    cp /var/jenkins_config/plugins.txt /var/jenkins_home;
    rm /usr/share/jenkins/ref/plugins/*.lock
    /usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;
{%- endif %}
{%- if Values.Master.ScriptApproval %}
    cp -n /var/jenkins_config/scriptapproval.xml /var/jenkins_home/scriptApproval.xml;
{%- endif %}
{%- if Values.Master.InitScripts %}
    mkdir -p /var/jenkins_home/init.groovy.d/;
    cp -n /var/jenkins_config/*.groovy /var/jenkins_home/init.groovy.d/
{%- endif %}
{%- for key, val in Values.Master.InitScripts.iteritems() %}
  init{{ key }}.groovy: |-
{{ val | indent(4) }}
{%- endfor %}
  plugins.txt: |-
{%- if Values.Master.InstallPlugins %}
{%- for index, val in Values.Master.InstallPlugins.iteritems() %}
{{ val | indent(4) }}
{%- endfor %}
{%- endif %}
{%- endif -%}
