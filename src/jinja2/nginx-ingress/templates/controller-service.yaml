apiVersion: v1
kind: Service
metadata:
{%- if Values.controller.service.annotations %}
  annotations:
{{ toYaml(Values.controller.service.annotations) | indent(4) }}
{%- endif %}
  labels:
    app: {{ self.name() }}
    chart: {{ Chart.Name }}-{{ Chart.Version }}
    component: "{{ Values.controller.name }}"
    heritage: {{ Release.Service }}
    release: {{ Release.Name }}
  name: {{ self.controller__fullname() }}
spec:
  clusterIP: "{{ Values.controller.service.clusterIP }}"
{%- if Values.controller.service.externalIPs %}
  externalIPs:
{{ toYaml(Values.controller.service.externalIPs) | indent(4) }}
{%- endif %}
{%- if Values.controller.service.loadBalancerIP %}
  loadBalancerIP: "{{ Values.controller.service.loadBalancerIP }}"
{%- endif %}
{%- if Values.controller.service.loadBalancerSourceRanges %}
  loadBalancerSourceRanges:
{{ toYaml(Values.controller.service.loadBalancerSourceRanges) | indent(4) }}
{%- endif %}
{%- if (Capabilities.KubeVersion.Minor>="7") and (Values.controller.service.externalTrafficPolicy) %}
  externalTrafficPolicy: "{{ Values.controller.service.externalTrafficPolicy }}"
{%- endif %}
{%- if (Capabilities.KubeVersion.Minor>="7") and (Values.controller.service.healthCheckNodePort) %}
  healthCheckNodePort: {{ Values.controller.service.healthCheckNodePort }}
{%- endif %}
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: {{ Values.controller.service.targetPorts.http }}
      {%- if ((Values.controller.service.type=="NodePort") and ( not  ( empty  Values.controller.service.nodePorts.http))) %}
      nodePort: {{ Values.controller.service.nodePorts.http }}
      {%- endif %}
    - name: https
      port: 443
      protocol: TCP
      targetPort: {{ Values.controller.service.targetPorts.https }}
      {%- if ((Values.controller.service.type=="NodePort") and ( not  ( empty  Values.controller.service.nodePorts.https))) %}
      nodePort: {{ Values.controller.service.nodePorts.https }}
      {%- endif %}
  {%- for key, value in Values.tcp.iteritems() %}
    - name: "{{ key }}-tcp"
      port: {{ key }}
      protocol: TCP
      targetPort: {{ key }}
  {%- endfor %}
  {%- for key, value in Values.udp.iteritems() %}
    - name: "{{ key }}-udp"
      port: {{ key }}
      protocol: UDP
      targetPort: {{ key }}
  {%- endfor %}
  selector:
    app: {{ self.name() }}
    component: "{{ Values.controller.name }}"
    release: {{ Release.Name }}
  type: "{{ Values.controller.service.type }}"
