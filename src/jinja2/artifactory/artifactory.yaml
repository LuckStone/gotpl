

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-artifactory-artifactory
  labels:
    app: artifactory
    chart: "artifactory-6.1.0"
    release: "test"
    heritage: "artifactory"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "20Gi"


---


kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-artifactory-nginx
  labels:
    app: artifactory
    chart: "artifactory-6.1.0"
    release: "test"
    heritage: "artifactory"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"


---


kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-artifactory-postgresql
  labels:
    app: artifactory
    chart: "artifactory-6.1.0"
    release: "test"
    heritage: "artifactory"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"


---

apiVersion: v1
kind: Secret
metadata:
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    heritage: artifactory
    release: test
  name: test-artifactory
type: Opaque
data:
  artifactory-database-password: "CmZqa3lidmVybHMK"


---

apiVersion: v1
kind: Service
metadata:
  name: artifactory
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    component: "artifactory"
    heritage: artifactory
    release: test
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: test
  selector:
    app: artifactory
    component: "artifactory"
    release: test

---

apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    component: "nginx"
    heritage: artifactory
    release: test
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: nginxhttp
  - port: 443
    targetPort: 443
    protocol: TCP
    name: testhttps
  selector:
    app: artifactory
    component: "nginx"
    release: test

---

apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    component: "postgresql"
    heritage: artifactory
    release: test
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: test
  selector:
    app: artifactory
    component: "postgresql"
    release: test

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test-artifactory-artifactory
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    component: "artifactory"
    heritage: artifactory
    release: test
spec:
  replicas: 
  template:
    metadata:
      labels:
        app: artifactory
        component: "artifactory"
        release: test
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.26.2"
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-rf"
        - "/var/opt/jfrog/artifactory/lost+found"
        volumeMounts:
        - mountPath: "/var/opt/jfrog/artifactory"
          name: artifactory-volume
      containers:
      - name: artifactory
        image: "docker.bintray.io/jfrog/artifactory-pro:5.5.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_TYPE
          value: postgresql
        - name: DB_USER
          value: artifactory
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: test-artifactory
              key: artifactory-database-password
        - name: DB_HOST
          value: postgresql
        ports:
        - containerPort: 8081
        volumeMounts:
        - mountPath: "/var/opt/jfrog/artifactory"
          name: artifactory-volume
      volumes:
      - name: artifactory-volume
        persistentVolumeClaim:
          claimName: test-artifactory-artifactory

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test-artifactory-nginx
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    component: "nginx"
    heritage: artifactory
    release: test
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: artifactory
        component: "nginx"
        release: test
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.26.2"
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-rf"
        - "/var/opt/jfrog/nginx/lost+found"
        volumeMounts:
        - mountPath: "/var/opt/jfrog/nginx"
          name: nginx-volume
      containers:
      - name: nginx
        image: "docker.bintray.io/jfrog/nginx-artifactory-pro:5.5.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: ART_BASE_URL
          value: http://artifactory:8081/artifactory
        - name: SSL
          value: "True"
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: "/var/opt/jfrog/nginx"
          name: nginx-volume
      volumes:
      - name: nginx-volume
        persistentVolumeClaim:
          claimName: test-artifactory-nginx

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test-artifactory-postgresql
  labels:
    app: artifactory
    chart: artifactory-6.1.0
    component: "postgresql"
    heritage: artifactory
    release: test
spec:
  replicas: 
  template:
    metadata:
      labels:
        app: artifactory
        component: "postgresql"
        release: test
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.26.2"
        imagePullPolicy: "IfNotPresent"
        command:
        - "rm"
        - "-rf"
        - "/var/lib/postgresql/data/lost+found"
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgresql-volume
      containers:
      - name: postgresql
        image: "docker.bintray.io/postgres:9.5.2"
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_DB
          value: artifactory
        - name: POSTGRES_USER
          value: artifactory
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: test-artifactory
              key: artifactory-database-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgresql-volume
      volumes:
      - name: postgresql-volume
        persistentVolumeClaim:
          claimName: test-artifactory-postgresql